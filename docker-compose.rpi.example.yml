services:
  server:
    build: 
      context: ./server
      dockerfile: ../docker/server.dockerfile
    command: npm run start:dev
    ports:
      - 5000:5000
      - 5555:5555
    volumes:
      - ./server:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/nibblix_db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-key-change-this
      - JWT_EXPIRES_IN=7d
      - CORS_ORIGIN=http://YOUR_PC_IP:3000
      - SMTP_HOST=smtp.ethereal.email
      - SMTP_PORT=587
      - SMTP_SECURE=false
      - SMTP_FROM=noreply@nibblix.com
      - FRONTEND_URL=http://YOUR_PC_IP:3000
      - HOST=0.0.0.0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - app-network
    restart: unless-stopped

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: nibblix_db
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    restart: unless-stopped

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    restart: unless-stopped
  
networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: